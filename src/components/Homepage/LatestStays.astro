---
// filepath: /Users/matthewmorelli/Documents/Dev/giveback-guide/src/components/Homepage/LatestStays.astro

import { getCollection } from "astro:content";
import StayCard from "../StayCard.astro";
import SCountryDropdown from "../SCountryDropdown.astro";

// Props: limit specifies the number of stays to display
interface Props {
  limit: number;
}

const { limit } = Astro.props;

// Helper function to parse dates in dd/mm/yyyy format
function parseDate(dateStr: string): Date {
  const [day, month, year] = dateStr.split("/");
  return new Date(`${year}-${month}-${day}`);
}

// Fetch stays from both Notion and MDX collections
const notionStays = await getCollection("stays");
const mdxStays = await getCollection("staysMdx");

// Normalize Notion stays to match expected structure
const normalizedNotionStays = notionStays.map((entry) => ({
  ...entry,
  source: 'notion',
  data: {
    ...entry.data,
    properties: {
      ...entry.data.properties,
      sImageURL1: entry.data.properties.sImageURL1 || "", // Ensure sImageURL1 is a string
      sVerify: entry.data.properties.sVerify || "", // Ensure sVerify is a string
    },
  },
}));

// Normalize MDX stays to match Notion structure
const normalizedMdxStays = mdxStays.map((entry) => ({
  ...entry,
  source: 'mdx',
  data: {
    ...entry.data,
    properties: {
      sTitle: entry.data.title,
      sCountry: entry.data.country,
      sLocale: entry.data.locale,
      sCategory: entry.data.category,
      sFacilities: entry.data.facilities,
      sName: entry.data.name,
      sType: entry.data.type,
      sSlug: entry.data.slug,
      sURL: entry.data.url,
      sOtherURL: entry.data.otherUrl,
      sBookingURL: entry.data.bookingUrl,
      sHotelsURL: entry.data.hotelsUrl,
      sAgodaURL: entry.data.agodaUrl,
      sMapsURL: entry.data.mapsUrl,
      sVerify: entry.data.verify || "",
      sImageURL1: entry.data.imageUrl1 || "",
      sImageURL2: entry.data.imageUrl2,
      sImageURL3: entry.data.imageUrl3,
      sPublished: { start: entry.data.published },
      sReview: entry.data.review,
    },
  },
}));

// Combine both collections
const allStays = [...normalizedNotionStays, ...normalizedMdxStays];

// Sort stays by sPublished date (descending order)
const sortedEntries = allStays.sort((a, b) => {
  const dateA = a.data.properties.sPublished?.start 
    ? (typeof a.data.properties.sPublished.start === 'string' 
        ? parseDate(a.data.properties.sPublished.start) 
        : a.data.properties.sPublished.start) 
    : new Date(0);
  const dateB = b.data.properties.sPublished?.start 
    ? (typeof b.data.properties.sPublished.start === 'string' 
        ? parseDate(b.data.properties.sPublished.start) 
        : b.data.properties.sPublished.start) 
    : new Date(0);
  return dateB.getTime() - dateA.getTime(); // Most recent first
});

// Limit the number of stays based on the limit prop
const limitedEntries = sortedEntries.slice(0, limit);
---

<section class="bg-white dark:bg-gray-900">
  <div class="py-8 px-4 mx-auto max-w-screen-xl sm:py-16 lg:px-6">
    <div class="flex flex-col items-start justify-between p-2 space-y-3 md:flex-row md:space-y-0 mb-4">
      <div class="max-w-screen-md">
        <h2
          class="mb-4 text-4xl tracking-tight font-extrabold text-gray-900 dark:text-white"
        >
          Latest Stays
        </h2>
        <p class="text-gray-500 sm:text-xl dark:text-gray-400">
          Find sustainable and unique accommodations for your next adventure.
        </p>
      </div>
      <div
        id="3"
        class="w-full md:w-1/4 p-2 order-2 md:order-3"
      >
        <SCountryDropdown />
      </div>
    </div>
    <div
      class="flex flex-row overflow-x-auto hide-scrollbar space-x-4 md:space-x-0 md:space-y-0 md:grid md:grid-cols-2 lg:grid-cols-3 md:gap-12"
    >
      {limitedEntries.map((stay) => (
        <div class="w-[70%] sm:w-[50%] md:w-auto flex-shrink-0 md:flex-shrink">
          <StayCard stay={stay} />
        </div>
      ))}
    </div>
  </div>
</section>
