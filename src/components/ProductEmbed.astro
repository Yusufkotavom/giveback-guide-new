---
import ResponsiveImage from './ResponsiveImage.astro';
import { 
  getAffiliateMarketplaces, 
  formatAffiliatePrice, 
  getPriorityBadge, 
  calculateDiscountPercentage,
  isSponsored,
  getCTAText,
  type AffiliateProduct 
} from '../utils/affiliateUtils';

interface Props {
  productSlug: string;
  style?: 'card' | 'inline' | 'banner' | 'minimal';
  showPrice?: boolean;
  showDescription?: boolean;
  showMultipleMarketplaces?: boolean;
  customTitle?: string;
  customCTA?: string;
  placement?: string;
}

const { 
  productSlug, 
  style = 'card', 
  showPrice = true, 
  showDescription = true,
  showMultipleMarketplaces = true,
  customTitle,
  customCTA,
  placement = 'blog-embed'
} = Astro.props;

// In a real implementation, you would fetch product data from your CMS/database
// For now, we'll create a mock function
async function getProductBySlug(slug: string): Promise<AffiliateProduct | null> {
  // This would typically fetch from your product collection
  // For demo purposes, return a mock product
  return {
    title: "Sample Affiliate Product",
    slug: slug,
    price: "299000",
    originalPrice: "399000", 
    imageUrl: "https://images.unsplash.com/photo-1523275335684-37898b6baf30?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80",
    affiliateCode: "KOTACOM123",
    commissionRate: "5%",
    discountCode: "SAVE25",
    specialOffer: "Diskon 25% untuk pembelian hari ini!",
    priority: "featured",
    externalRating: "4.8",
    soldCount: "150+",
    isSponsored: false,
    targetAudience: ["tech-enthusiast", "professionals"],
    tokopediaUrl: "https://tokopedia.com/product/sample",
    shopeeUrl: "https://shopee.co.id/product/sample",
    blibliUrl: "https://blibli.com/product/sample"
  };
}

const product = await getProductBySlug(productSlug);

if (!product) {
  return null; // Don't render if product not found
}

// Get affiliate marketplaces with tracking
const affiliateMarketplaces = getAffiliateMarketplaces(product, placement);
const primaryMarketplace = affiliateMarketplaces[0];
const secondaryMarketplaces = affiliateMarketplaces.slice(1, 2); // Show max 1 secondary for embeds

// Format prices
const formattedPrice = formatAffiliatePrice(product.price);
const formattedOriginalPrice = formatAffiliatePrice(product.originalPrice);
const discountPercentage = product.originalPrice ? calculateDiscountPercentage(product.originalPrice, product.price || '0') : 0;

// Get priority badge
const priorityBadge = getPriorityBadge(product.priority);

// Check if sponsored
const sponsored = isSponsored(product);

// Default image
const DEFAULT_IMAGE = 'https://res.cloudinary.com/dxyjku3eh/image/upload/v1754820661/Tanpa_judul_Presentasi__20250810_170926_0000_vdiibn.png';
const imageUrl = product.imageUrl || DEFAULT_IMAGE;

// Display title
const displayTitle = customTitle || product.title;
---

{style === 'card' && (
  <!-- Card Style - Full featured embed -->
  <div class="affiliate-product-embed bg-gradient-to-br from-blue-50 to-indigo-50 rounded-xl p-6 border-2 border-blue-200 my-8 relative overflow-hidden">
    <!-- Background Pattern -->
    <div class="absolute inset-0 opacity-5">
      <svg class="w-full h-full" viewBox="0 0 60 60" fill="none">
        <defs>
          <pattern id="grid" width="20" height="20" patternUnits="userSpaceOnUse">
            <path d="M 20 0 L 0 0 0 20" fill="none" stroke="currentColor" stroke-width="1"/>
          </pattern>
        </defs>
        <rect width="100%" height="100%" fill="url(#grid)" />
      </svg>
    </div>
    
    <!-- Sponsored/Priority Badge -->
    {sponsored && (
      <div class="absolute top-4 right-4 bg-blue-500 text-white text-xs font-bold px-3 py-1 rounded-full z-10">
        SPONSORED
      </div>
    )}
    {priorityBadge && !sponsored && (
      <div class={`absolute top-4 right-4 text-xs font-bold px-3 py-1 rounded-full z-10 ${priorityBadge.class}`}>
        {priorityBadge.text}
      </div>
    )}
    
    <div class="relative z-10">
      <div class="flex items-start space-x-4">
        <!-- Product Image -->
        <div class="flex-shrink-0">
          <ResponsiveImage
            src={imageUrl}
            alt={displayTitle}
            class="w-24 h-24 object-cover rounded-lg shadow-md"
            fallbackWidth={96}
            loading="lazy"
          />
          {discountPercentage > 0 && (
            <div class="absolute -top-2 -right-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded-full">
              -{discountPercentage}%
            </div>
          )}
        </div>
        
        <!-- Product Info -->
        <div class="flex-1 min-w-0">
          <h4 class="text-lg font-bold text-gray-900 mb-2">{displayTitle}</h4>
          
          {showPrice && formattedPrice && (
            <div class="flex items-center space-x-2 mb-2">
              <span class="text-xl font-bold text-green-600">{formattedPrice}</span>
              {formattedOriginalPrice && discountPercentage > 0 && (
                <span class="text-sm text-gray-500 line-through">{formattedOriginalPrice}</span>
              )}
            </div>
          )}
          
          {product.externalRating && (
            <div class="flex items-center space-x-2 mb-2">
              <div class="flex items-center">
                <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                </svg>
                <span class="text-sm text-gray-700 ml-1">{product.externalRating}</span>
              </div>
              {product.soldCount && (
                <span class="text-sm text-gray-500">({product.soldCount} terjual)</span>
              )}
            </div>
          )}
          
          {product.specialOffer && (
            <div class="bg-red-100 text-red-800 text-sm px-3 py-1 rounded-full mb-3 inline-block">
              ðŸ”¥ {product.specialOffer}
            </div>
          )}
          
          {product.discountCode && (
            <div class="bg-blue-100 text-blue-800 text-sm px-3 py-1 rounded-full mb-3 inline-block ml-2">
              ðŸ’³ Kode: {product.discountCode}
            </div>
          )}
        </div>
      </div>
      
      <!-- CTA Buttons -->
      <div class="mt-4 space-y-2">
        {primaryMarketplace && (
          <a
            href={primaryMarketplace.affiliateUrl}
            target="_blank"
            rel="noopener noreferrer sponsored"
            class={`w-full flex items-center justify-center gap-2 rounded-lg px-6 py-3 text-sm font-bold transition-all duration-200 ${primaryMarketplace.marketplace === 'tokopedia' ? 'bg-green-500 hover:bg-green-600 text-white' : primaryMarketplace.marketplace === 'shopee' ? 'bg-orange-500 hover:bg-orange-600 text-white' : primaryMarketplace.marketplace === 'blibli' ? 'bg-blue-500 hover:bg-blue-600 text-white' : 'bg-purple-500 hover:bg-purple-600 text-white'}`}
            onclick={`window.affiliateUtils?.trackClick('${product.slug}', '${primaryMarketplace.marketplace}', '${placement}')`}
          >
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M7 18a2 2 0 1 1 0-4 2 2 0 0 1 0 4ZM1 2v2h2l3.6 7.59-1.35 2.45a2 2 0 0 0-.25.96 2 2 0 0 0 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12L8.1 13h7.45c.75 0 1.41-.41 1.75-1.03L21.7 4H5.21L4.27 2H1Zm16 16a2 2 0 1 1 .001-4.001A2 2 0 0 1 17 18Z"/>
            </svg>
            {customCTA || getCTAText(product, primaryMarketplace.marketplace)}
          </a>
        )}
        
        {showMultipleMarketplaces && secondaryMarketplaces.length > 0 && (
          <div class="flex gap-2">
            {secondaryMarketplaces.map((marketplace) => (
              <a
                href={marketplace.affiliateUrl}
                target="_blank"
                rel="noopener noreferrer sponsored"
                class="flex-1 flex items-center justify-center gap-1 rounded-lg px-4 py-2 text-sm font-medium border-2 border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors"
                onclick={`window.affiliateUtils?.trackClick('${product.slug}', '${marketplace.marketplace}', '${placement}')`}
              >
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M7 18a2 2 0 1 1 0-4 2 2 0 0 1 0 4ZM1 2v2h2l3.6 7.59-1.35 2.45a2 2 0 0 0-.25.96 2 2 0 0 0 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12L8.1 13h7.45c.75 0 1.41-.41 1.75-1.03L21.7 4H5.21L4.27 2H1Zm16 16a2 2 0 1 1 .001-4.001A2 2 0 0 1 17 18Z"/>
                </svg>
                {marketplace.marketplace.charAt(0).toUpperCase() + marketplace.marketplace.slice(1)}
              </a>
            ))}
          </div>
        )}
      </div>
    </div>
  </div>
)}

{style === 'inline' && (
  <!-- Inline Style - Compact horizontal layout -->
  <div class="affiliate-product-embed bg-white rounded-lg shadow-md border border-gray-200 p-4 my-6 flex items-center space-x-4">
    <ResponsiveImage
      src={imageUrl}
      alt={displayTitle}
      class="w-16 h-16 object-cover rounded-lg flex-shrink-0"
      fallbackWidth={64}
      loading="lazy"
    />
    
    <div class="flex-1 min-w-0">
      <h5 class="font-semibold text-gray-900 truncate">{displayTitle}</h5>
      {showPrice && formattedPrice && (
        <p class="text-green-600 font-bold">{formattedPrice}</p>
      )}
      {product.externalRating && (
        <div class="flex items-center">
          <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
          </svg>
          <span class="text-xs text-gray-600 ml-1">{product.externalRating}</span>
        </div>
      )}
    </div>
    
    {primaryMarketplace && (
      <a
        href={primaryMarketplace.affiliateUrl}
        target="_blank"
        rel="noopener noreferrer sponsored"
        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors flex-shrink-0"
        onclick={`window.affiliateUtils?.trackClick('${product.slug}', '${primaryMarketplace.marketplace}', '${placement}')`}
      >
        {customCTA || "Beli"}
      </a>
    )}
  </div>
)}

{style === 'banner' && (
  <!-- Banner Style - Wide promotional banner -->
  <div class="affiliate-product-embed bg-gradient-to-r from-purple-600 to-blue-600 text-white rounded-xl p-6 my-8 relative overflow-hidden">
    <!-- Background Pattern -->
    <div class="absolute inset-0 opacity-10">
      <svg class="w-full h-full" viewBox="0 0 100 100">
        <defs>
          <pattern id="banner-pattern" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse">
            <circle cx="10" cy="10" r="2" fill="currentColor"/>
          </pattern>
        </defs>
        <rect width="100%" height="100%" fill="url(#banner-pattern)" />
      </svg>
    </div>
    
    <div class="relative z-10 flex items-center justify-between">
      <div class="flex items-center space-x-4">
        <ResponsiveImage
          src={imageUrl}
          alt={displayTitle}
          class="w-20 h-20 object-cover rounded-lg shadow-lg"
          fallbackWidth={80}
          loading="lazy"
        />
        
        <div>
          <h4 class="text-xl font-bold mb-1">{displayTitle}</h4>
          {showPrice && formattedPrice && (
            <div class="flex items-center space-x-2">
              <span class="text-2xl font-bold text-yellow-300">{formattedPrice}</span>
              {discountPercentage > 0 && (
                <span class="bg-red-500 text-white text-sm px-2 py-1 rounded-full">
                  -{discountPercentage}% OFF
                </span>
              )}
            </div>
          )}
          {product.specialOffer && (
            <p class="text-yellow-200 text-sm mt-1">ðŸ”¥ {product.specialOffer}</p>
          )}
        </div>
      </div>
      
      {primaryMarketplace && (
        <a
          href={primaryMarketplace.affiliateUrl}
          target="_blank"
          rel="noopener noreferrer sponsored"
          class="bg-white text-purple-600 hover:bg-gray-100 px-8 py-3 rounded-lg font-bold text-lg transition-colors shadow-lg"
          onclick={`window.affiliateUtils?.trackClick('${product.slug}', '${primaryMarketplace.marketplace}', '${placement}')`}
        >
          {customCTA || "BELI SEKARANG"}
        </a>
      )}
    </div>
  </div>
)}

{style === 'minimal' && (
  <!-- Minimal Style - Simple text link with small preview -->
  <div class="affiliate-product-embed inline-flex items-center bg-gray-50 rounded-lg p-3 my-2 border border-gray-200 hover:border-blue-300 transition-colors">
    <ResponsiveImage
      src={imageUrl}
      alt={displayTitle}
      class="w-12 h-12 object-cover rounded-md mr-3"
      fallbackWidth={48}
      loading="lazy"
    />
    
    <div class="flex-1">
      <h6 class="font-medium text-gray-900 text-sm">{displayTitle}</h6>
      {showPrice && formattedPrice && (
        <p class="text-green-600 font-semibold text-sm">{formattedPrice}</p>
      )}
    </div>
    
    {primaryMarketplace && (
      <a
        href={primaryMarketplace.affiliateUrl}
        target="_blank"
        rel="noopener noreferrer sponsored"
        class="text-blue-600 hover:text-blue-800 text-sm font-medium ml-3"
        onclick={`window.affiliateUtils?.trackClick('${product.slug}', '${primaryMarketplace.marketplace}', '${placement}')`}
      >
        {customCTA || "Lihat â†’"}
      </a>
    )}
  </div>
)}

<!-- Disclosure for sponsored content -->
{sponsored && (
  <p class="text-xs text-gray-500 mt-2 italic">
    * Konten bersponsor. Kami mungkin menerima komisi dari pembelian melalui link ini.
  </p>
)}

<!-- Tracking Script -->
<script is:inline define:vars={{ productSlug: product.slug, placement }}>
  // Track product embed view
  document.addEventListener('DOMContentLoaded', function() {
    if (window.affiliateUtils?.trackView) {
      window.affiliateUtils.trackView(productSlug, placement);
    }
  });
</script>