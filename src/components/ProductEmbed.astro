---
import { getCollection } from 'astro:content';
import ResponsiveImage from './ResponsiveImage.astro';
import { 
  getAffiliateMarketplaces, 
  formatAffiliatePrice, 
  calculateDiscountPercentage, 
  getPriorityBadge,
  isSponsored,
  getCTAText,
  type AffiliateProduct 
} from '../utils/affiliateUtils';

export interface Props {
  slug: string;
  style?: 'card' | 'inline' | 'banner' | 'compact';
  showDescription?: boolean;
  showMarketplaces?: boolean;
  maxMarketplaces?: number;
  placement?: string;
  className?: string;
}

const { 
  slug, 
  style = 'card', 
  showDescription = true, 
  showMarketplaces = true, 
  maxMarketplaces = 2,
  placement = 'blog-embed',
  className = ''
} = Astro.props;

// Get the product from collections
let product = null;
let source = 'notion';

try {
  const notionProducts = await getCollection('products');
  product = notionProducts.find(p => p.data.properties.pSlug === slug);
  if (product) source = 'notion';
} catch (e) {
  console.warn("Products collection not available:", e.message);
}

if (!product) {
  try {
    const mdxProducts = await getCollection('productsMdx');
    product = mdxProducts.find(p => p.data.slug === slug);
    if (product) source = 'mdx';
  } catch (e) {
    console.warn("ProductsMdx collection not available:", e.message);
  }
}

if (!product) {
  console.warn(`Product with slug "${slug}" not found`);
  return;
}

// Normalize product data
const productData = source === 'notion' 
  ? {
      title: product.data.properties.pTitle,
      slug: product.data.properties.pSlug,
      price: product.data.properties.pPrice,
      originalPrice: product.data.properties.pOriginalPrice,
      description: product.data.properties.pDescription,
      imageUrl: product.data.properties.pImageURL1,
      category: Array.isArray(product.data.properties.pCategory) ? product.data.properties.pCategory.filter(Boolean) : (product.data.properties.pCategory ? [product.data.properties.pCategory] : []),
      // Affiliate fields
      affiliateCode: product.data.properties.pAffiliateCode,
      commissionRate: product.data.properties.pCommissionRate,
      discountCode: product.data.properties.pDiscountCode,
      specialOffer: product.data.properties.pSpecialOffer,
      ctaText: product.data.properties.pCTAText,
      priority: product.data.properties.pPriority,
      externalRating: product.data.properties.pExternalRating,
      soldCount: product.data.properties.pSoldCount,
      isSponsored: product.data.properties.pIsSponsored,
      targetAudience: Array.isArray(product.data.properties.pTargetAudience) ? product.data.properties.pTargetAudience.filter(Boolean) : (product.data.properties.pTargetAudience ? [product.data.properties.pTargetAudience] : []),
      tokopediaUrl: product.data.properties.pTokopediaURL,
      shopeeUrl: product.data.properties.pShopeeURL,
      blibliUrl: product.data.properties.pBlibliURL,
      bukalapakUrl: product.data.properties.pBukalapakURL,
      lazadaUrl: product.data.properties.pLazadaURL,
    }
  : {
      title: product.data.title,
      slug: product.data.slug,
      price: product.data.price,
      originalPrice: "",
      description: product.data.description,
      imageUrl: product.data.imageUrl,
      category: Array.isArray(product.data.category) ? product.data.category.filter(Boolean) : (product.data.category ? [product.data.category] : []),
      // Empty affiliate fields for MDX
      affiliateCode: "",
      commissionRate: "",
      discountCode: "",
      specialOffer: "",
      ctaText: "",
      priority: "",
      externalRating: "",
      soldCount: "",
      isSponsored: false,
      targetAudience: [],
      tokopediaUrl: "",
      shopeeUrl: "",
      blibliUrl: "",
      bukalapakUrl: "",
      lazadaUrl: "",
    };

const DEFAULT_IMAGE = 'https://res.cloudinary.com/dxyjku3eh/image/upload/v1754820661/Tanpa_judul_Presentasi__20250810_170926_0000_vdiibn.png';
const imageUrl = productData.imageUrl || DEFAULT_IMAGE;

// Create AffiliateProduct for utilities
const affiliateProduct: AffiliateProduct = {
  title: productData.title,
  slug: productData.slug,
  price: productData.price,
  originalPrice: productData.originalPrice,
  imageUrl: productData.imageUrl,
  affiliateCode: productData.affiliateCode,
  commissionRate: productData.commissionRate,
  discountCode: productData.discountCode,
  specialOffer: productData.specialOffer,
  ctaText: productData.ctaText,
  priority: productData.priority,
  externalRating: productData.externalRating,
  soldCount: productData.soldCount,
  isSponsored: productData.isSponsored,
  targetAudience: productData.targetAudience,
  tokopediaUrl: productData.tokopediaUrl,
  shopeeUrl: productData.shopeeUrl,
  blibliUrl: productData.blibliUrl,
  bukalapakUrl: productData.bukalapakUrl,
  lazadaUrl: productData.lazadaUrl,
};

// Get affiliate marketplaces
const affiliateMarketplaces = getAffiliateMarketplaces(affiliateProduct, placement);
const displayMarketplaces = affiliateMarketplaces.slice(0, maxMarketplaces);

// Calculate display data
const formattedPrice = formatAffiliatePrice(productData.price);
const formattedOriginalPrice = formatAffiliatePrice(productData.originalPrice);
const discountPercentage = calculateDiscountPercentage(productData.originalPrice || '', productData.price || '');
const priorityBadge = getPriorityBadge(productData.priority);
const sponsored = isSponsored(affiliateProduct);
---

{style === 'card' && (
  <div class={`bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden hover:shadow-xl transition-all duration-300 ${className}`}>
    <!-- Sponsored/Priority Badge -->
    <div class="relative">
      {sponsored && (
        <div class="absolute top-2 right-2 z-10 bg-blue-500 text-white text-xs font-bold px-2 py-1 rounded-full">
          SPONSORED
        </div>
      )}
      {priorityBadge && !sponsored && (
        <div class={`absolute top-2 right-2 z-10 text-xs font-bold px-2 py-1 rounded-full ${priorityBadge.class}`}>
          {priorityBadge.text}
        </div>
      )}
      {discountPercentage > 0 && (
        <div class="absolute top-2 left-2 z-10 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded-full">
          -{discountPercentage}%
        </div>
      )}
      
      <!-- Product Image -->
      <div class="aspect-video">
        <a href={`/products/${productData.slug}/`} class="block h-full">
          <ResponsiveImage
            src={imageUrl}
            alt={productData.title}
            class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
            preset="card"
            fallbackWidth={400}
            loading="lazy"
          />
        </a>
      </div>
    </div>

    <!-- Product Info -->
    <div class="p-4">
      <!-- Categories -->
      {productData.category.length > 0 && (
        <div class="flex flex-wrap gap-1 mb-2">
          {productData.category.slice(0, 2).map((category: string) => (
            <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
              {category}
            </span>
          ))}
        </div>
      )}

      <!-- Product Title -->
      <h3 class="text-lg font-bold text-gray-900 mb-2 line-clamp-2">
        <a href={`/products/${productData.slug}/`} class="hover:text-blue-600 transition-colors">
          {productData.title}
        </a>
      </h3>

      <!-- Rating & Sold Count -->
      <div class="flex items-center justify-between mb-3">
        <div class="flex items-center space-x-2">
          {productData.externalRating && (
            <div class="flex items-center">
              <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
              </svg>
              <span class="text-sm text-gray-600 ml-1">{productData.externalRating}</span>
            </div>
          )}
          {productData.soldCount && (
            <span class="text-xs text-gray-500">({productData.soldCount} terjual)</span>
          )}
        </div>
      </div>

      <!-- Price Section -->
      <div class="mb-3">
        <div class="flex items-center space-x-2">
          {formattedPrice && (
            <span class="text-lg font-bold text-green-600">{formattedPrice}</span>
          )}
          {formattedOriginalPrice && discountPercentage > 0 && (
            <span class="text-sm text-gray-500 line-through">{formattedOriginalPrice}</span>
          )}
        </div>
        
        <!-- Special Offer -->
        {productData.specialOffer && (
          <div class="mt-1 text-xs text-red-600 font-medium">
            ðŸ”¥ {productData.specialOffer}
          </div>
        )}
        
        <!-- Discount Code -->
        {productData.discountCode && (
          <div class="mt-1 text-xs text-blue-600 font-medium">
            ðŸ’³ Kode: {productData.discountCode}
          </div>
        )}
      </div>

      <!-- Description -->
      {showDescription && productData.description && (
        <p class="text-sm text-gray-600 mb-3 line-clamp-2">
          {productData.description}
        </p>
      )}

      <!-- Marketplace Buttons -->
      {showMarketplaces && displayMarketplaces.length > 0 && (
        <div class="space-y-2">
          {displayMarketplaces.map((marketplace) => (
            <a
              href={marketplace.affiliateUrl}
              target="_blank"
              rel="noopener noreferrer sponsored"
              class={`w-full flex items-center justify-center gap-2 rounded-lg px-4 py-2 text-sm font-semibold transition-all duration-200 ${
                marketplace.marketplace === 'tokopedia' ? 'bg-green-500 hover:bg-green-600 text-white' :
                marketplace.marketplace === 'shopee' ? 'bg-orange-500 hover:bg-orange-600 text-white' :
                marketplace.marketplace === 'blibli' ? 'bg-blue-500 hover:bg-blue-600 text-white' :
                marketplace.marketplace === 'bukalapak' ? 'bg-red-500 hover:bg-red-600 text-white' :
                'bg-purple-500 hover:bg-purple-600 text-white'
              }`}
              onclick={`window.affiliateUtils?.trackClick('${productData.slug}', '${marketplace.marketplace}', '${placement}')`}
            >
              {getCTAText(affiliateProduct, marketplace.marketplace)}
            </a>
          ))}
        </div>
      )}

      <!-- View Details Button -->
      <div class="mt-3 pt-3 border-t border-gray-200">
        <a 
          href={`/products/${productData.slug}/`}
          class="w-full flex items-center justify-center px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors text-sm font-medium"
        >
          Lihat Detail Lengkap
        </a>
      </div>
    </div>
  </div>
)}

{style === 'inline' && (
  <div class={`flex items-center bg-gray-50 rounded-lg p-3 border border-gray-200 hover:border-blue-300 transition-colors ${className}`}>
    <!-- Product Image -->
    <div class="flex-shrink-0 w-16 h-16 relative">
      {sponsored && (
        <div class="absolute -top-1 -right-1 bg-blue-500 text-white text-xs font-bold px-1 py-0.5 rounded-full text-[10px]">
          AD
        </div>
      )}
      {discountPercentage > 0 && (
        <div class="absolute -top-1 -left-1 bg-red-500 text-white text-xs font-bold px-1 py-0.5 rounded-full text-[10px]">
          -{discountPercentage}%
        </div>
      )}
      <a href={`/products/${productData.slug}/`}>
        <ResponsiveImage
          src={imageUrl}
          alt={productData.title}
          class="w-full h-full object-cover rounded-lg"
          preset="thumbnail"
          fallbackWidth={64}
          loading="lazy"
        />
      </a>
    </div>

    <!-- Product Info -->
    <div class="flex-1 ml-3">
      <h4 class="text-sm font-semibold text-gray-900 line-clamp-1 mb-1">
        <a href={`/products/${productData.slug}/`} class="hover:text-blue-600 transition-colors">
          {productData.title}
        </a>
      </h4>
      
      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-2">
          {formattedPrice && (
            <span class="text-sm font-bold text-green-600">{formattedPrice}</span>
          )}
          {formattedOriginalPrice && discountPercentage > 0 && (
            <span class="text-xs text-gray-500 line-through">{formattedOriginalPrice}</span>
          )}
        </div>
        
        {productData.externalRating && (
          <div class="flex items-center">
            <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
            </svg>
            <span class="text-xs text-gray-600 ml-1">{productData.externalRating}</span>
          </div>
        )}
      </div>
    </div>

    <!-- Quick Buy Button -->
    {showMarketplaces && displayMarketplaces.length > 0 && (
      <div class="flex-shrink-0 ml-3">
        <a
          href={displayMarketplaces[0].affiliateUrl}
          target="_blank"
          rel="noopener noreferrer sponsored"
          class={`px-3 py-1.5 rounded-lg text-xs font-semibold transition-all duration-200 ${
            displayMarketplaces[0].marketplace === 'tokopedia' ? 'bg-green-500 hover:bg-green-600 text-white' :
            displayMarketplaces[0].marketplace === 'shopee' ? 'bg-orange-500 hover:bg-orange-600 text-white' :
            displayMarketplaces[0].marketplace === 'blibli' ? 'bg-blue-500 hover:bg-blue-600 text-white' :
            displayMarketplaces[0].marketplace === 'bukalapak' ? 'bg-red-500 hover:bg-red-600 text-white' :
            'bg-purple-500 hover:bg-purple-600 text-white'
          }`}
          onclick={`window.affiliateUtils?.trackClick('${productData.slug}', '${displayMarketplaces[0].marketplace}', '${placement}')`}
        >
          Beli
        </a>
      </div>
    )}
  </div>
)}

{style === 'banner' && (
  <div class={`bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl p-6 border border-blue-200 relative overflow-hidden ${className}`}>
    <!-- Background Pattern -->
    <div class="absolute inset-0 opacity-5">
      <svg class="w-full h-full" viewBox="0 0 100 100">
        <defs>
          <pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse">
            <path d="M 10 0 L 0 0 0 10" fill="none" stroke="currentColor" stroke-width="1"/>
          </pattern>
        </defs>
        <rect width="100%" height="100%" fill="url(#grid)" />
      </svg>
    </div>

    <!-- Sponsored Banner -->
    {sponsored && (
      <div class="absolute top-0 right-0 bg-blue-500 text-white text-xs font-bold px-3 py-1 rounded-bl-lg">
        SPONSORED
      </div>
    )}

    <div class="grid md:grid-cols-3 gap-6 items-center relative">
      <!-- Product Image -->
      <div class="relative">
        {discountPercentage > 0 && (
          <div class="absolute -top-2 -right-2 bg-red-500 text-white text-sm font-bold px-3 py-1 rounded-full z-10">
            -{discountPercentage}%
          </div>
        )}
        <a href={`/products/${productData.slug}/`}>
          <ResponsiveImage
            src={imageUrl}
            alt={productData.title}
            class="w-full aspect-square object-cover rounded-xl shadow-lg hover:scale-105 transition-transform duration-300"
            preset="card"
            fallbackWidth={300}
            loading="lazy"
          />
        </a>
      </div>

      <!-- Product Info -->
      <div class="md:col-span-2 space-y-4">
        <div>
          <h3 class="text-2xl font-bold text-gray-900 mb-2">
            <a href={`/products/${productData.slug}/`} class="hover:text-blue-600 transition-colors">
              {productData.title}
            </a>
          </h3>
          
          <!-- Rating & Categories -->
          <div class="flex items-center space-x-4 mb-3">
            {productData.externalRating && (
              <div class="flex items-center">
                <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                </svg>
                <span class="text-sm text-gray-700 ml-1 font-medium">{productData.externalRating}</span>
              </div>
            )}
            {productData.category.length > 0 && (
              <div class="flex flex-wrap gap-2">
                {productData.category.slice(0, 3).map((category: string) => (
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                    {category}
                  </span>
                ))}
              </div>
            )}
          </div>

          <!-- Price Section -->
          <div class="mb-4">
            <div class="flex items-center space-x-3 mb-2">
              {formattedPrice && (
                <span class="text-2xl font-bold text-green-600">{formattedPrice}</span>
              )}
              {formattedOriginalPrice && discountPercentage > 0 && (
                <span class="text-lg text-gray-500 line-through">{formattedOriginalPrice}</span>
              )}
            </div>
            
            <!-- Special Offer & Discount Code -->
            <div class="space-y-1">
              {productData.specialOffer && (
                <div class="text-sm text-red-600 font-medium">
                  ðŸ”¥ {productData.specialOffer}
                </div>
              )}
              {productData.discountCode && (
                <div class="text-sm text-blue-600 font-medium">
                  ðŸ’³ Gunakan kode: <span class="font-bold">{productData.discountCode}</span>
                </div>
              )}
            </div>
          </div>

          <!-- Description -->
          {showDescription && productData.description && (
            <p class="text-gray-700 mb-4 line-clamp-2">
              {productData.description}
            </p>
          )}

          <!-- Action Buttons -->
          <div class="flex flex-wrap gap-3">
            {showMarketplaces && displayMarketplaces.length > 0 && (
              <>
                {displayMarketplaces.map((marketplace) => (
                  <a
                    href={marketplace.affiliateUrl}
                    target="_blank"
                    rel="noopener noreferrer sponsored"
                    class={`px-6 py-3 rounded-lg font-semibold transition-all duration-200 hover:scale-105 ${
                      marketplace.marketplace === 'tokopedia' ? 'bg-green-500 hover:bg-green-600 text-white' :
                      marketplace.marketplace === 'shopee' ? 'bg-orange-500 hover:bg-orange-600 text-white' :
                      marketplace.marketplace === 'blibli' ? 'bg-blue-500 hover:bg-blue-600 text-white' :
                      marketplace.marketplace === 'bukalapak' ? 'bg-red-500 hover:bg-red-600 text-white' :
                      'bg-purple-500 hover:bg-purple-600 text-white'
                    }`}
                    onclick={`window.affiliateUtils?.trackClick('${productData.slug}', '${marketplace.marketplace}', '${placement}')`}
                  >
                    {getCTAText(affiliateProduct, marketplace.marketplace)}
                  </a>
                ))}
              </>
            )}
            
            <a 
              href={`/products/${productData.slug}/`}
              class="px-6 py-3 bg-white text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors font-medium"
            >
              Lihat Detail
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
)}

{style === 'compact' && (
  <div class={`bg-white border border-gray-200 rounded-lg p-3 hover:shadow-md transition-all duration-200 ${className}`}>
    <div class="flex items-center space-x-3">
      <!-- Product Image -->
      <div class="flex-shrink-0 w-12 h-12 relative">
        {sponsored && (
          <div class="absolute -top-1 -right-1 bg-blue-500 text-white text-xs font-bold px-1 py-0.5 rounded-full text-[8px]">
            AD
          </div>
        )}
        <a href={`/products/${productData.slug}/`}>
          <ResponsiveImage
            src={imageUrl}
            alt={productData.title}
            class="w-full h-full object-cover rounded"
            preset="thumbnail"
            fallbackWidth={48}
            loading="lazy"
          />
        </a>
      </div>

      <!-- Product Info -->
      <div class="flex-1 min-w-0">
        <h4 class="text-sm font-medium text-gray-900 truncate mb-1">
          <a href={`/products/${productData.slug}/`} class="hover:text-blue-600 transition-colors">
            {productData.title}
          </a>
        </h4>
        <div class="flex items-center justify-between">
          {formattedPrice && (
            <span class="text-sm font-semibold text-green-600">{formattedPrice}</span>
          )}
          {productData.externalRating && (
            <div class="flex items-center">
              <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
              </svg>
              <span class="text-xs text-gray-600 ml-1">{productData.externalRating}</span>
            </div>
          )}
        </div>
      </div>

      <!-- Quick Action -->
      {showMarketplaces && displayMarketplaces.length > 0 && (
        <div class="flex-shrink-0">
          <a
            href={displayMarketplaces[0].affiliateUrl}
            target="_blank"
            rel="noopener noreferrer sponsored"
            class="text-xs px-2 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors"
            onclick={`window.affiliateUtils?.trackClick('${productData.slug}', '${displayMarketplaces[0].marketplace}', '${placement}')`}
          >
            Beli
          </a>
        </div>
      )}
    </div>
  </div>
)}

<!-- Tracking Script -->
<script define:vars={{ productSlug: productData.slug, placement, affiliateProduct }}>
  // Track embed view
  if (typeof window !== 'undefined' && window.affiliateUtils) {
    window.affiliateUtils.trackView(productSlug, placement);
  }
</script>