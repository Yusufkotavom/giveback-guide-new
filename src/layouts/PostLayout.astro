---
import type { CollectionEntry } from "astro:content";
import MainLayout from "./MainLayout.astro";
import ResponsiveImage from "../components/ResponsiveImage.astro";
import SchemaMarkup from "../components/SchemaMarkup.astro";
import InternalLinkSuggestions from "../components/InternalLinkSuggestions.astro";
import { COMPANY_NAME } from "../consts";

type Props = CollectionEntry<"posts">["data"] | CollectionEntry<"postsMdx">["data"];

const { properties } = Astro.props;
const isNotionPost = !!properties.bTitle;
const isMdxPost = !isNotionPost;

// Normalize data for consistent access
const postData = isNotionPost 
  ? {
      title: properties.bTitle,
      tags: Array.isArray(properties.bTags) ? properties.bTags.filter(Boolean) : (properties.bTags ? [properties.bTags] : []),
      slug: properties.bSlug,
      coverImage: properties.bCoverImage,
      published: properties.bPublished,
      lastUpdated: properties.bLastUpdated,
      description: properties.bDescription,
    }
  : {
      title: properties.title,
      tags: Array.isArray(properties.tags) ? properties.tags.filter(Boolean) : (properties.tags ? [properties.tags] : []),
      slug: properties.slug,
      coverImage: properties.coverImage,
      published: { start: properties.published },
      lastUpdated: { start: properties.lastUpdated },
      description: properties.description,
    };

const title = postData.title + " - Blog";
const description = postData.description || `Artikel tentang ${postData.title} dari ${COMPANY_NAME}`;
const image = postData.coverImage || 'https://res.cloudinary.com/dxyjku3eh/image/upload/v1754820661/Tanpa_judul_Presentasi__20250810_170926_0000_vdiibn.png';

// Parse date safely
const publishedDate = postData.published?.start 
  ? (postData.published.start instanceof Date 
      ? postData.published.start.toISOString()
      : new Date(postData.published.start).toISOString())
  : new Date().toISOString();

const modifiedDate = postData.lastUpdated?.start 
  ? (postData.lastUpdated.start instanceof Date 
      ? postData.lastUpdated.start.toISOString()
      : new Date(postData.lastUpdated.start).toISOString())
  : publishedDate;

// Breadcrumbs for schema
const breadcrumbs = [
  { name: "Home", url: "/" },
  { name: "Blog", url: "/blog" },
  { name: postData.title, url: Astro.url.toString() }
];
---

<MainLayout title={title} description={description} image={image}>
  <SchemaMarkup
    type="article"
    title={postData.title}
    description={description}
    image={image}
    breadcrumbs={breadcrumbs}
    author={COMPANY_NAME}
    datePublished={publishedDate}
    dateModified={modifiedDate}
    tags={postData.tags}
    category={postData.tags} // Use tags as categories for articles
  />

  <!-- Breadcrumbs -->
  <section class="bg-gray-50 dark:bg-gray-800 py-4">
    <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8">
      <nav class="flex" aria-label="Breadcrumb">
        <ol class="inline-flex items-center space-x-1 md:space-x-3">
          <li class="inline-flex items-center">
            <a href="/" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white">
              <svg class="w-3 h-3 mr-2.5" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20">
                <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
              </svg>
              Home
            </a>
          </li>
          <li>
            <div class="flex items-center">
              <svg class="w-3 h-3 text-gray-400 mx-1" aria-hidden="true" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
              </svg>
              <a href="/blog" class="ml-1 text-sm font-medium text-gray-700 hover:text-blue-600 md:ml-2 dark:text-gray-400 dark:hover:text-white">Blog</a>
            </div>
          </li>
          <li aria-current="page">
            <div class="flex items-center">
              <svg class="w-3 h-3 text-gray-400 mx-1" aria-hidden="true" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
              </svg>
              <span class="ml-1 text-sm font-medium text-gray-500 md:ml-2 dark:text-gray-400">{postData.title}</span>
            </div>
          </li>
        </ol>
      </nav>
    </div>
  </section>

  <!-- Article Header -->
  <section class="bg-white dark:bg-gray-900">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <header class="mb-8">
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6">
          {postData.title}
        </h1>
        
        <!-- Article Meta -->
        <div class="flex flex-wrap items-center gap-4 text-sm text-gray-600 dark:text-gray-400 mb-6">
          <time datetime={publishedDate}>
            {new Date(publishedDate).toLocaleDateString('id-ID', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}
          </time>
          <span>•</span>
          <span>oleh {COMPANY_NAME}</span>
          {modifiedDate !== publishedDate && (
            <>
              <span>•</span>
              <span>Diperbarui {new Date(modifiedDate).toLocaleDateString('id-ID', { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
              })}</span>
            </>
          )}
        </div>

        <!-- Tags -->
        {postData.tags && postData.tags.length > 0 && (
          <div class="flex flex-wrap gap-2 mb-8">
            {postData.tags.map((tag: string) => (
              <a 
                href={`/blog/${tag.toLowerCase().replace(/\s+/g, '-')}`}
                class="bg-blue-100 text-blue-800 text-sm font-medium px-3 py-1 rounded-full hover:bg-blue-200 transition-colors dark:bg-blue-900 dark:text-blue-300"
              >
                #{tag}
              </a>
            ))}
          </div>
        )}
        
        <!-- Featured Image -->
        {image && (
          <div class="mb-8">
            <ResponsiveImage
              src={image}
              alt={postData.title}
              class="rounded-lg shadow-lg w-full"
              loading="eager"
              fetchpriority="high"
            />
          </div>
        )}
      </header>
      
      <!-- Article Content -->
      <article class="prose prose-lg max-w-none dark:prose-invert prose-headings:text-gray-900 dark:prose-headings:text-white prose-p:text-gray-700 dark:prose-p:text-gray-300">
        <slot />
      </article>
      
      <!-- Internal Link Suggestions -->
      <InternalLinkSuggestions 
        currentSlug={postData.slug}
        currentTags={postData.tags}
        currentTitle={postData.title}
        contentType="post"
      />
      
      <!-- Article Footer -->
      <footer class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-700">
        <div class="flex items-center justify-between">
          <div class="text-sm text-gray-600 dark:text-gray-400">
            Artikel ini ditulis oleh tim {COMPANY_NAME}
          </div>
          <div class="flex space-x-4">
            <a 
              href={`https://wa.me/62085799520350?text=Saya%20tertarik%20dengan%20artikel%20${encodeURIComponent(postData.title)}`}
              class="text-green-600 hover:text-green-700 transition-colors"
              title="Bagikan via WhatsApp"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M.057 24l1.687-6.163c-1.041-1.804-1.588-3.849-1.587-5.946.003-6.556 5.338-11.891 11.893-11.891 3.181.001 6.167 1.24 8.413 3.488 2.245 2.248 3.481 5.236 3.48 8.414-.003 6.557-5.338 11.892-11.893 11.892-1.99-.001-3.951-.5-5.688-1.448l-6.305 1.654zm6.597-3.807c1.676.995 3.276 1.591 5.392 1.592 5.448 0 9.886-4.434 9.889-9.885.002-5.462-4.415-9.89-9.881-9.892-5.452 0-9.887 4.434-9.889 9.884-.001 2.225.651 3.891 1.746 5.634l-.999 3.648 3.742-.981zm11.387-5.464c-.074-.124-.272-.198-.57-.347-.297-.149-1.758-.868-2.031-.967-.272-.099-.47-.149-.669.149-.198.297-.768.967-.941 1.165-.173.198-.347.223-.644.074-.297-.149-1.255-.462-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.297-.347.446-.521.151-.172.2-.296.3-.495.099-.198.05-.372-.025-.521-.075-.148-.669-1.611-.916-2.206-.242-.579-.487-.501-.669-.51l-.57-.01c-.198 0-.52.074-.792.372s-1.04 1.016-1.04 2.479 1.065 2.876 1.213 3.074c.149.198 2.095 3.2 5.076 4.487.709.306 1.263.489 1.694.626.712.226 1.36.194 1.872.118.571-.085 1.758-.719 2.006-1.413.248-.695.248-1.29.173-1.414z"/>
              </svg>
            </a>
          </div>
        </div>
      </footer>
    </div>
  </section>
</MainLayout>