---
import type { CollectionEntry } from "astro:content";
import MainLayout from "./MainLayout.astro";
import ResponsiveImage from "../components/ResponsiveImage.astro";
import SchemaMarkup from "../components/SchemaMarkup.astro";
import InternalLinkSuggestions from "../components/InternalLinkSuggestions.astro";
import { COMPANY_NAME } from "../consts";

type Props = (CollectionEntry<"posts">["data"] | CollectionEntry<"postsMdx">["data"]) & { wordCount?: number };

const { properties, wordCount } = Astro.props as any;
const isNotionPost = !!properties.bTitle;
const isMdxPost = !isNotionPost;

// Normalize data for consistent access
const postData = isNotionPost 
  ? {
      title: properties.bTitle,
      tags: Array.isArray(properties.bTags) ? properties.bTags.filter(Boolean) : (properties.bTags ? [properties.bTags] : []),
      slug: properties.bSlug,
      coverImage: properties.bCoverImage,
      published: properties.bPublished,
      lastUpdated: properties.bLastUpdated,
      description: properties.bDescription,
    }
  : {
      title: properties.bTitle,
      tags: Array.isArray(properties.bTags) ? properties.bTags.filter(Boolean) : (properties.bTags ? [properties.bTags] : []),
      slug: properties.bSlug,
      coverImage: properties.bCoverImage,
      published: properties.bPublished,
      lastUpdated: properties.bLastUpdated,
      description: properties.bDescription,
    };

const title = postData.title + " - Blog";
const description = postData.description || `Artikel tentang ${postData.title} dari ${COMPANY_NAME}`;
const image = postData.coverImage || 'https://res.cloudinary.com/dxyjku3eh/image/upload/v1754820661/Tanpa_judul_Presentasi__20250810_170926_0000_vdiibn.png';

// Parse date safely
const publishedDate = postData.published?.start 
  ? (postData.published.start instanceof Date 
      ? postData.published.start.toISOString()
      : new Date(postData.published.start).toISOString())
  : new Date().toISOString();

const modifiedDate = postData.lastUpdated?.start 
  ? (postData.lastUpdated.start instanceof Date 
      ? postData.lastUpdated.start.toISOString()
      : new Date(postData.lastUpdated.start).toISOString())
  : publishedDate;

// Breadcrumbs for schema
const breadcrumbs = [
  { name: "Home", url: "/" },
  { name: "Blog", url: "/blog" },
  { name: postData.title, url: Astro.url.toString() }
];
---

<MainLayout title={title} description={description} image={image} type="article" published={publishedDate} modified={modifiedDate} section={postData.tags?.[0]} tags={postData.tags}>
  <SchemaMarkup
    type="article"
    title={postData.title}
    description={description}
    image={image}
    breadcrumbs={breadcrumbs}
    author={COMPANY_NAME}
    datePublished={publishedDate}
    dateModified={modifiedDate}
    tags={postData.tags}
    category={postData.tags}
    data={{ wordCount }}
  />

  <!-- Breadcrumbs -->
  <section class="bg-gray-50 dark:bg-gray-800 py-4">
    <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8">
      <nav class="flex" aria-label="Breadcrumb">
        <ol class="inline-flex items-center space-x-1 md:space-x-3">
          <li class="inline-flex items-center">
            <a href="/" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white">
              <svg class="w-3 h-3 mr-2.5" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20">
                <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
              </svg>
              Home
            </a>
          </li>
          <li>
            <div class="flex items-center">
              <svg class="w-3 h-3 text-gray-400 mx-1" aria-hidden="true" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
              </svg>
              <a href="/blog" class="ml-1 text-sm font-medium text-gray-700 hover:text-blue-600 md:ml-2 dark:text-gray-400 dark:hover:text-white">Blog</a>
            </div>
          </li>
          <li aria-current="page">
            <div class="flex items-center">
              <svg class="w-3 h-3 text-gray-400 mx-1" aria-hidden="true" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
              </svg>
              <span class="ml-1 text-sm font-medium text-gray-500 md:ml-2 dark:text-gray-400">{postData.title}</span>
            </div>
          </li>
        </ol>
      </nav>
    </div>
  </section>
  
  <!-- Article Content -->
  <section class="bg-white dark:bg-gray-900">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <article class="prose prose-lg max-w-none dark:prose-invert prose-headings:text-gray-900 dark:prose-headings:text-white prose-p:text-gray-700 dark:prose-p:text-gray-300">
        <slot />
      </article>

      <InternalLinkSuggestions 
        currentSlug={postData.slug}
        currentTags={postData.tags}
        currentTitle={postData.title}
        contentType="post"
      />
    </div>
  </section>
</MainLayout>