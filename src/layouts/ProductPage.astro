---
import type { CollectionEntry } from "astro:content";
import MainLayout from "./MainLayout.astro";
import ResponsiveImage from "../components/ResponsiveImage.astro";
import SchemaMarkup from "../components/SchemaMarkup.astro";
import { COMPANY_NAME } from "../consts";

type Props = CollectionEntry<"products">["data"] | CollectionEntry<"productsMdx">["data"];

const { properties } = Astro.props as any;
const isNotionProduct = !!properties.pTitle;
const isMdxProduct = !isNotionProduct;

// Normalize data for consistent access
const productData = isNotionProduct 
  ? {
      title: properties.pTitle,
      category: Array.isArray(properties.pCategory) ? properties.pCategory : [properties.pCategory],
      slug: properties.pSlug,
      imageUrl: properties.pImageURL1,
      published: properties.pPublished,
      country: properties.pCountry,
      locale: properties.pLocale,
      price: properties.pPrice,
      description: properties.pDescription,
      features: properties.pFeatures,
      name: properties.pName,
      type: properties.pType,
      url: properties.pURL,
      otherUrl: properties.pOtherURL,
      tokopediaUrl: properties.pTokopediaURL,
      shopeeUrl: properties.pShopeeURL,
      blibliUrl: properties.pBlibliURL,
      bukalapakUrl: properties.pBukalapakURL,
      lazadaUrl: properties.pLazadaURL,
      mapsUrl: properties.pMapsURL,
      verify: properties.pVerify,
      imageUrl2: properties.pImageURL2,
      imageUrl3: properties.pImageURL3,
      review: properties.pReview,
    }
  : {
      title: properties.title,
      category: properties.category,
      slug: properties.slug,
      imageUrl: properties.imageUrl,
      published: { start: properties.published },
      country: properties.country,
      locale: properties.locale,
      price: properties.price,
      description: properties.description,
      features: properties.features,
      name: properties.name,
      type: properties.type,
      url: properties.url,
      otherUrl: properties.otherUrl,
      tokopediaUrl: properties.tokopediaUrl,
      shopeeUrl: properties.shopeeUrl,
      blibliUrl: properties.blibliUrl,
      bukalapakUrl: properties.bukalapakUrl,
      lazadaUrl: properties.lazadaUrl,
      mapsUrl: properties.mapsUrl,
      verify: properties.verify,
      imageUrl2: properties.imageUrl2,
      imageUrl3: properties.imageUrl3,
      review: properties.review,
    };

const title = productData.title + " - Products";
const description = productData.description || productData.review || `${productData.title} - Produk berkualitas dari ${COMPANY_NAME}`;
const DEFAULT_IMAGE = 'https://res.cloudinary.com/dxyjku3eh/image/upload/v1754820661/Tanpa_judul_Presentasi__20250810_170926_0000_vdiibn.png';
const image = productData.imageUrl || DEFAULT_IMAGE;

// Parse date safely for schema
const publishedDate = productData.published?.start 
  ? (productData.published.start instanceof Date 
      ? productData.published.start.toISOString()
      : new Date(productData.published.start).toISOString())
  : new Date().toISOString();

// Breadcrumbs for schema
const breadcrumbs = [
  { name: "Home", url: "/" },
  { name: "Products", url: "/products" },
  { name: productData.title, url: Astro.url.toString() }
];

// Sample reviews for product (you can make this dynamic from data)
const reviews = productData.review ? [
  {
    author: "Customer Review",
    rating: 5,
    reviewBody: productData.review,
    datePublished: publishedDate.split('T')[0]
  }
] : [];

// Fallback images
const fallbackImage = DEFAULT_IMAGE;
const oneSec: string[] = [productData.imageUrl, productData.imageUrl2, productData.imageUrl3].filter((i: string) => !!i);
const images: string[] = oneSec.length > 0 ? oneSec : [fallbackImage];
---

<MainLayout title={title} description={description} image={image}>
  <SchemaMarkup
    type="product"
    title={productData.title}
    description={description}
    image={image}
    breadcrumbs={breadcrumbs}
    datePublished={publishedDate}
    dateModified={publishedDate}
    category={productData.category}
    price={productData.price}
    reviews={reviews}
    data={{
      brand: COMPANY_NAME,
      sku: productData.slug,
      features: productData.features,
      name: productData.name,
      type: productData.type,
      verify: productData.verify
    }}
  />

  <!-- Breadcrumbs -->
  <section class="bg-gray-50 dark:bg-gray-800 py-4">
    <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8">
      <nav class="flex" aria-label="Breadcrumb">
        <ol class="inline-flex items-center space-x-1 md:space-x-3">
          <li class="inline-flex items-center">
            <a href="/" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white">
              <svg class="w-3 h-3 mr-2.5" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20">
                <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
              </svg>
              Home
            </a>
          </li>
          <li>
            <div class="flex items-center">
              <svg class="w-3 h-3 text-gray-400 mx-1" aria-hidden="true" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
              </svg>
              <a href="/products" class="ml-1 text-sm font-medium text-gray-700 hover:text-blue-600 md:ml-2 dark:text-gray-400 dark:hover:text-white">Products</a>
            </div>
          </li>
          <li aria-current="page">
            <div class="flex items-center">
              <svg class="w-3 h-3 text-gray-400 mx-1" aria-hidden="true" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
              </svg>
              <span class="ml-1 text-sm font-medium text-gray-500 md:ml-2 dark:text-gray-400">{productData.title}</span>
            </div>
          </li>
        </ol>
      </nav>
    </div>
  </section>

  <!-- Product Header -->
  <section class="bg-white dark:bg-gray-900">
    <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="grid lg:grid-cols-2 gap-8 items-start">
        <div>
          <!-- Product Images -->
          <div class="space-y-4">
            <ResponsiveImage
              src={images[0]}
              alt={productData.title}
              class="rounded-lg shadow-lg w-full"
              loading="eager"
              fetchpriority="high"
            />
            {images.length > 1 && (
              <div class="grid grid-cols-3 gap-2">
                {images.slice(1, 4).map((img: string) => (
                  <ResponsiveImage
                    src={img}
                    alt={productData.title}
                    class="rounded-lg shadow w-full h-20 object-cover"
                  />
                ))}
              </div>
            )}
          </div>
        </div>
        
        <div class="space-y-6">
          <div>
            <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
              {productData.title}
            </h1>
            
            {productData.price && (
              <div class="mb-4">
                <span class="text-3xl font-bold text-blue-600 dark:text-blue-400">
                  {productData.price}
                </span>
              </div>
            )}
            
            {productData.description && (
              <p class="text-gray-700 dark:text-gray-300 mb-6">
                {productData.description}
              </p>
            )}
          </div>
          
          {productData.category && productData.category.length > 0 && (
            <div>
              <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-2">Categories</h3>
              <div class="flex flex-wrap gap-2">
                {productData.category.map((cat: string) => (
                  <span class="bg-blue-100 text-blue-800 text-sm font-medium px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300">
                    {cat}
                  </span>
                ))}
              </div>
            </div>
          )}
          
          {productData.features && productData.features.length > 0 && (
            <div>
              <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-2">Features</h3>
              <ul class="list-disc list-inside space-y-1 text-gray-700 dark:text-gray-300">
                {productData.features.map((feature: string) => (
                  <li>{feature}</li>
                ))}
              </ul>
            </div>
          )}
          
          {productData.verify && (
            <div class="flex items-center space-x-2">
              <svg class="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
              </svg>
              <span class="text-green-700 dark:text-green-300 font-medium">{productData.verify}</span>
            </div>
          )}
          
          <!-- Purchase Options -->
          <div class="space-y-3">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Purchase Options</h3>
            <div class="grid grid-cols-2 gap-3">
              {productData.tokopediaUrl && (
                <a 
                  href={productData.tokopediaUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex items-center justify-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors"
                >
                  Tokopedia
                </a>
              )}
              {productData.shopeeUrl && (
                <a 
                  href={productData.shopeeUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex items-center justify-center px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors"
                >
                  Shopee
                </a>
              )}
              {productData.blibliUrl && (
                <a 
                  href={productData.blibliUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex items-center justify-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                >
                  Blibli
                </a>
              )}
              {productData.lazadaUrl && (
                <a 
                  href={productData.lazadaUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex items-center justify-center px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors"
                >
                  Lazada
                </a>
              )}
            </div>
            
            <!-- WhatsApp Contact -->
            <a 
              href={`https://wa.me/62085799520350?text=Halo,%20saya%20tertarik%20dengan%20produk%20${encodeURIComponent(productData.title)}`}
              class="w-full flex items-center justify-center px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors"
            >
              <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                <path d="M.057 24l1.687-6.163c-1.041-1.804-1.588-3.849-1.587-5.946.003-6.556 5.338-11.891 11.893-11.891 3.181.001 6.167 1.24 8.413 3.488 2.245 2.248 3.481 5.236 3.48 8.414-.003 6.557-5.338 11.892-11.893 11.892-1.99-.001-3.951-.5-5.688-1.448l-6.305 1.654zm6.597-3.807c1.676.995 3.276 1.591 5.392 1.592 5.448 0 9.886-4.434 9.889-9.885.002-5.462-4.415-9.89-9.881-9.892-5.452 0-9.887 4.434-9.889 9.884-.001 2.225.651 3.891 1.746 5.634l-.999 3.648 3.742-.981zm11.387-5.464c-.074-.124-.272-.198-.57-.347-.297-.149-1.758-.868-2.031-.967-.272-.099-.47-.149-.669.149-.198.297-.768.967-.941 1.165-.173.198-.347.223-.644.074-.297-.149-1.255-.462-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.297-.347.446-.521.151-.172.2-.296.3-.495.099-.198.05-.372-.025-.521-.075-.148-.669-1.611-.916-2.206-.242-.579-.487-.501-.669-.51l-.57-.01c-.198 0-.52.074-.792.372s-1.04 1.016-1.04 2.479 1.065 2.876 1.213 3.074c.149.198 2.095 3.2 5.076 4.487.709.306 1.263.489 1.694.626.712.226 1.36.194 1.872.118.571-.085 1.758-.719 2.006-1.413.248-.695.248-1.29.173-1.414z"/>
              </svg>
              Hubungi Kami via WhatsApp
            </a>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Product Details -->
  <section class="bg-gray-50 dark:bg-gray-800">
    <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="prose prose-lg max-w-none dark:prose-invert">
        <slot />
      </div>
    </div>
  </section>

  <!-- Product Review -->
  {productData.review && (
    <section class="bg-blue-50 dark:bg-blue-900">
      <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="text-center">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">Customer Review</h2>
          <blockquote class="text-xl italic text-gray-700 dark:text-gray-300 mb-6">
            "{productData.review}"
          </blockquote>
          <div class="flex justify-center items-center space-x-1">
            {[1,2,3,4,5].map(() => (
              <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
              </svg>
            ))}
          </div>
        </div>
      </div>
    </section>
  )}
</MainLayout>