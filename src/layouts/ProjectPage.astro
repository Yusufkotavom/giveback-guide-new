---
import type { CollectionEntry } from "astro:content";
import MainLayout from "./MainLayout.astro";
import ResponsiveImage from "../components/ResponsiveImage.astro";
import SchemaMarkup from "../components/SchemaMarkup.astro";
import { COMPANY_NAME } from "../consts";

type Props = CollectionEntry<"projects">["data"] | CollectionEntry<"projectsMdx">["data"];

const { properties } = Astro.props as any;
const isNotionProject = !!properties.pTitle;
const isMdxProject = !isNotionProject;

// Normalize data for consistent access
const projectData = isNotionProject 
  ? {
      title: properties.pTitle,
      category: Array.isArray(properties.pCategory) ? properties.pCategory : [properties.pCategory],
      slug: properties.pSlug,
      imageUrl: properties.pImageURL,
      published: properties.pPublished,
      country: properties.pCountry,
      locale: properties.pLocale,
      organiser: properties.pOrganiser,
      cost: properties.pCost,
      url: properties.pURL,
      gygUrl: properties.pGYGURL,
      mapsUrl: properties.pMapsURL,
      verify: properties.pVerify,
      review: properties.pReview,
      getInvolved: properties.pGetInvolved,
      // Case study fields (may not exist in Notion)
      client: properties.client,
      clientIndustry: properties.clientIndustry,
      projectDuration: properties.projectDuration,
      teamSize: properties.teamSize,
      technologies: properties.technologies || [],
      challenges: properties.challenges,
      solutions: properties.solutions,
      results: properties.results,
      beforeMetrics: properties.beforeMetrics,
      afterMetrics: properties.afterMetrics,
      roiPercentage: properties.roiPercentage,
      clientTestimonial: properties.clientTestimonial,
      clientName: properties.clientName,
      clientPosition: properties.clientPosition
    }
  : {
      title: properties.title,
      category: properties.category,
      slug: properties.slug,
      imageUrl: properties.imageUrl,
      published: { start: properties.published },
      country: properties.country,
      locale: properties.locale,
      organiser: properties.organiser,
      cost: properties.cost,
      url: properties.url,
      gygUrl: properties.gygUrl,
      mapsUrl: properties.mapsUrl,
      verify: properties.verify,
      review: properties.review,
      getInvolved: properties.getInvolved,
      // Case study fields
      client: properties.client,
      clientIndustry: properties.clientIndustry,
      projectDuration: properties.projectDuration,
      teamSize: properties.teamSize,
      technologies: properties.technologies || [],
      challenges: properties.challenges,
      solutions: properties.solutions,
      results: properties.results,
      beforeMetrics: properties.beforeMetrics,
      afterMetrics: properties.afterMetrics,
      roiPercentage: properties.roiPercentage,
      clientTestimonial: properties.clientTestimonial,
      clientName: properties.clientName,
      clientPosition: properties.clientPosition
    };

const title = projectData.title + " - Projects";
const description = projectData.challenges || properties.pReview || `Case study ${projectData.title} dari ${COMPANY_NAME}`;
const DEFAULT_IMAGE = 'https://res.cloudinary.com/dxyjku3eh/image/upload/v1754820661/Tanpa_judul_Presentasi__20250810_170926_0000_vdiibn.png';
const featuredImage = projectData.imageUrl || DEFAULT_IMAGE;

// Parse date safely for schema
const publishedDate = projectData.published?.start 
  ? (projectData.published.start instanceof Date 
      ? projectData.published.start.toISOString()
      : new Date(projectData.published.start).toISOString())
  : new Date().toISOString();

// Breadcrumbs for schema
const breadcrumbs = [
  { name: "Home", url: "/" },
  { name: "Projects", url: "/projects" },
  { name: projectData.title, url: Astro.url.toString() }
];

// Generate reviews from client testimonial if available
const reviews = projectData.clientTestimonial ? [
  {
    author: projectData.clientName || "Client",
    rating: 5,
    reviewBody: projectData.clientTestimonial,
    datePublished: publishedDate.split('T')[0]
  }
] : [];

const fallbackImage = DEFAULT_IMAGE;
const oneSec: string[] = [projectData.imageUrl, ...(projectData.additionalImages || [])].filter((i: string) => !!i);
const images: string[] = oneSec.length > 0 ? oneSec : [fallbackImage];
---

<MainLayout title={title} description={description} image={featuredImage}>
  <SchemaMarkup
    type="project"
    title={projectData.title}
    description={description}
    image={featuredImage}
    breadcrumbs={breadcrumbs}
    datePublished={publishedDate}
    dateModified={publishedDate}
    category={projectData.category}
    tags={projectData.technologies}
    reviews={reviews}
    data={{
      client: projectData.client,
      clientIndustry: projectData.clientIndustry,
      projectDuration: projectData.projectDuration,
      teamSize: projectData.teamSize,
      technologies: projectData.technologies,
      challenges: projectData.challenges,
      solutions: projectData.solutions,
      results: projectData.results,
      roiPercentage: projectData.roiPercentage
    }}
  />

  <!-- Breadcrumbs -->
  <section class="bg-gray-50 dark:bg-gray-800 py-4">
    <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8">
      <nav class="flex" aria-label="Breadcrumb">
        <ol class="inline-flex items-center space-x-1 md:space-x-3">
          <li class="inline-flex items-center">
            <a href="/" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white">
              <svg class="w-3 h-3 mr-2.5" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20">
                <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
              </svg>
              Home
            </a>
          </li>
          <li>
            <div class="flex items-center">
              <svg class="w-3 h-3 text-gray-400 mx-1" aria-hidden="true" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
              </svg>
              <a href="/projects" class="ml-1 text-sm font-medium text-gray-700 hover:text-blue-600 md:ml-2 dark:text-gray-400 dark:hover:text-white">Projects</a>
            </div>
          </li>
          <li aria-current="page">
            <div class="flex items-center">
              <svg class="w-3 h-3 text-gray-400 mx-1" aria-hidden="true" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
              </svg>
              <span class="ml-1 text-sm font-medium text-gray-500 md:ml-2 dark:text-gray-400">{projectData.title}</span>
            </div>
          </li>
        </ol>
      </nav>
    </div>
  </section>

  <!-- Project Header -->
  <section class="bg-white dark:bg-gray-900">
    <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="grid lg:grid-cols-2 gap-8 items-center">
        <div>
          <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6">
            {projectData.title}
          </h1>
          
          {projectData.client && (
            <div class="mb-4">
              <span class="text-lg text-gray-600 dark:text-gray-400">Client: </span>
              <span class="text-lg font-semibold text-blue-600 dark:text-blue-400">
                {projectData.client}
              </span>
            </div>
          )}
          
          {projectData.category && projectData.category.length > 0 && (
            <div class="mb-6">
              <div class="flex flex-wrap gap-2">
                {projectData.category.map((cat: string) => (
                  <span class="bg-blue-100 text-blue-800 text-sm font-medium px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300">
                    {cat}
                  </span>
                ))}
              </div>
            </div>
          )}
          
          {projectData.roiPercentage && (
            <div class="mb-6">
              <div class="bg-green-50 border border-green-200 rounded-lg p-4 dark:bg-green-900 dark:border-green-700">
                <div class="flex items-center">
                  <svg class="w-5 h-5 text-green-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.293l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13a1 1 0 102 0V9.414l1.293 1.293a1 1 0 001.414-1.414z" clip-rule="evenodd"></path>
                  </svg>
                  <span class="text-green-800 font-semibold dark:text-green-200">
                    ROI: {projectData.roiPercentage}
                  </span>
                </div>
              </div>
            </div>
          )}
        </div>
        
        <div class="relative">
          <ResponsiveImage
            src={featuredImage}
            alt={projectData.title}
            class="rounded-lg shadow-lg"
            loading="eager"
            fetchpriority="high"
          />
        </div>
      </div>
    </div>
  </section>

  <!-- Project Details -->
  {(projectData.client || projectData.projectDuration || projectData.teamSize || projectData.technologies.length > 0) && (
    <section class="bg-gray-50 dark:bg-gray-800">
      <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">Project Details</h2>
        <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
          {projectData.client && (
            <div class="bg-white p-6 rounded-lg shadow dark:bg-gray-900">
              <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-2">Client</h3>
              <p class="text-lg font-semibold text-gray-900 dark:text-white">{projectData.client}</p>
              {projectData.clientIndustry && (
                <p class="text-sm text-gray-600 dark:text-gray-300">{projectData.clientIndustry}</p>
              )}
            </div>
          )}
          
          {projectData.projectDuration && (
            <div class="bg-white p-6 rounded-lg shadow dark:bg-gray-900">
              <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-2">Duration</h3>
              <p class="text-lg font-semibold text-gray-900 dark:text-white">{projectData.projectDuration}</p>
            </div>
          )}
          
          {projectData.teamSize && (
            <div class="bg-white p-6 rounded-lg shadow dark:bg-gray-900">
              <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-2">Team Size</h3>
              <p class="text-lg font-semibold text-gray-900 dark:text-white">{projectData.teamSize}</p>
            </div>
          )}
          
          {projectData.technologies.length > 0 && (
            <div class="bg-white p-6 rounded-lg shadow dark:bg-gray-900">
              <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-2">Technologies</h3>
              <div class="flex flex-wrap gap-1">
                {projectData.technologies.slice(0, 3).map((tech: string) => (
                  <span class="bg-gray-100 text-gray-800 text-xs font-medium px-2 py-1 rounded dark:bg-gray-700 dark:text-gray-300">
                    {tech}
                  </span>
                ))}
                {projectData.technologies.length > 3 && (
                  <span class="text-xs text-gray-500">+{projectData.technologies.length - 3} more</span>
                )}
              </div>
            </div>
          )}
        </div>
      </div>
    </section>
  )}

  <!-- Content Section -->
  <section class="bg-white dark:bg-gray-900">
    <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="prose prose-lg max-w-none dark:prose-invert">
        <slot />
      </div>
    </div>
  </section>

  <!-- Client Testimonial -->
  {projectData.clientTestimonial && (
    <section class="bg-blue-50 dark:bg-blue-900">
      <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="text-center">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">Client Testimonial</h2>
          <blockquote class="text-xl italic text-gray-700 dark:text-gray-300 mb-6">
            "{projectData.clientTestimonial}"
          </blockquote>
          {projectData.clientName && (
            <div class="text-gray-600 dark:text-gray-400">
              <p class="font-semibold">{projectData.clientName}</p>
              {projectData.clientPosition && (
                <p class="text-sm">{projectData.clientPosition}</p>
              )}
            </div>
          )}
        </div>
      </div>
    </section>
  )}

  <!-- Contact CTA -->
  <section class="bg-blue-600 dark:bg-blue-800">
    <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="text-center">
        <h2 class="text-3xl font-bold text-white mb-4">
          Interested in similar project?
        </h2>
        <p class="text-xl text-blue-100 mb-8">
          Let's discuss your project requirements
        </p>
        <a 
          href={`https://wa.me/62085799520350?text=Halo,%20saya%20tertarik%20dengan%20project%20${encodeURIComponent(projectData.title)}`}
          class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-blue-600 bg-white hover:bg-gray-50 transition-colors duration-200"
        >
          <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
            <path d="M.057 24l1.687-6.163c-1.041-1.804-1.588-3.849-1.587-5.946.003-6.556 5.338-11.891 11.893-11.891 3.181.001 6.167 1.24 8.413 3.488 2.245 2.248 3.481 5.236 3.48 8.414-.003 6.557-5.338 11.892-11.893 11.892-1.99-.001-3.951-.5-5.688-1.448l-6.305 1.654zm6.597-3.807c1.676.995 3.276 1.591 5.392 1.592 5.448 0 9.886-4.434 9.889-9.885.002-5.462-4.415-9.89-9.881-9.892-5.452 0-9.887 4.434-9.889 9.884-.001 2.225.651 3.891 1.746 5.634l-.999 3.648 3.742-.981zm11.387-5.464c-.074-.124-.272-.198-.57-.347-.297-.149-1.758-.868-2.031-.967-.272-.099-.47-.149-.669.149-.198.297-.768.967-.941 1.165-.173.198-.347.223-.644.074-.297-.149-1.255-.462-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.297-.347.446-.521.151-.172.2-.296.3-.495.099-.198.05-.372-.025-.521-.075-.148-.669-1.611-.916-2.206-.242-.579-.487-.501-.669-.51l-.57-.01c-.198 0-.52.074-.792.372s-1.04 1.016-1.04 2.479 1.065 2.876 1.213 3.074c.149.198 2.095 3.2 5.076 4.487.709.306 1.263.489 1.694.626.712.226 1.36.194 1.872.118.571-.085 1.758-.719 2.006-1.413.248-.695.248-1.29.173-1.414z"/>
          </svg>
          Discuss Your Project
        </a>
      </div>
    </div>
  </section>
</MainLayout>
