---
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import ServiceCard from '../../components/ServiceCard.astro';
import SCategoryDropdown from '../../components/SCategoryDropdown.astro';

// Fetch services from both Notion and MDX collections
const notionServices = await getCollection('services');
const mdxServices = await getCollection('servicesMdx');

// Normalize Notion services (existing format)
const normalizedNotionServices = notionServices.map((entry) => ({
  ...entry,
  source: 'notion',
  data: {
    ...entry.data,
    properties: {
      ...entry.data.properties,
      svImageURL1: entry.data.properties.svImageURL1 || "",
      svVerify: entry.data.properties.svVerify || "",
    },
  },
}));

// Normalize MDX services to match Notion structure
const normalizedMdxServices = mdxServices.map((entry) => ({
  ...entry,
  source: 'mdx',
  data: {
    ...entry.data,
    properties: {
      svTitle: entry.data.title,
      svCategory: entry.data.category,
      svSlug: entry.data.slug,
      svImageURL1: entry.data.imageUrl1 || "",
      svPublished: { start: entry.data.published },
      svWilayah: entry.data.wilayah,
      svProvider: entry.data.provider,
      svType: entry.data.type,
      svPrice: entry.data.price,
      svURL: entry.data.url,
      svWhatsAppURL: entry.data.whatsappUrl,
      svMapsURL: entry.data.mapsUrl,
      svVerify: entry.data.verify || "",
      svImageURL2: entry.data.imageUrl2,
      svImageURL3: entry.data.imageUrl3,
      svReview: entry.data.review,
    },
  },
}));

// Combine both collections
const entries = [...normalizedNotionServices, ...normalizedMdxServices];

// Get active category from URL
const url = new URL(Astro.request.url);
const activeCategory = url.searchParams.get('category');

// Filter services by category if specified
const filtered = activeCategory
  ? entries.filter((e) => {
      const c = e.data.properties.svCategory as any;
      return Array.isArray(c) ? c.includes(activeCategory) : c === activeCategory;
    })
  : entries;
---

<MainLayout 
  title="Layanan IT Profesional" 
  description="Temukan berbagai layanan IT profesional untuk kebutuhan bisnis Anda. IT Support, Website Development, Software Development, dan Percetakan."
>
  <section class="bg-white dark:bg-gray-900">
    <div class="py-8 px-4 mx-auto max-w-screen-xl sm:py-16 lg:px-6">
      <div class="max-w-screen-md mb-8 lg:mb-16">
        <h1 class="mb-4 text-4xl tracking-tight font-extrabold text-gray-900 dark:text-white">
          Layanan IT Profesional
        </h1>
        <p class="text-gray-500 sm:text-xl dark:text-gray-400">
          Solusi teknologi terpercaya untuk UMKM dan bisnis. IT Support, Website Development, Software Development, dan layanan Percetakan berkualitas tinggi.
        </p>
      </div>
      
      <div class="flex flex-col md:flex-row mb-8 gap-4">
        <!-- Showing count -->
        <div class="flex-1">
          <span class="text-sm font-normal text-gray-500 dark:text-gray-400">
            Menampilkan <span class="font-semibold text-gray-900 dark:text-white">
              {filtered.length}
            </span> dari <span class="font-semibold text-gray-900 dark:text-white">
              {entries.length}
            </span> layanan
            {activeCategory && (
              <span class="ml-2">
                dalam kategori <span class="font-semibold text-blue-600 dark:text-blue-400">{activeCategory}</span>
              </span>
            )}
          </span>
        </div>
        
        <!-- Category Dropdown -->
        <div class="w-full md:w-1/4">
          <SCategoryDropdown />
        </div>
      </div>

      <div class="space-y-8 md:grid md:grid-cols-2 lg:grid-cols-3 md:gap-12 md:space-y-0">
        {filtered.map((service) => (
          <ServiceCard service={service} />
        ))}
      </div>

      {filtered.length === 0 && (
        <div class="text-center py-12">
          <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
          </svg>
          <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">Tidak ada layanan ditemukan</h3>
          <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
            Tidak ada layanan dalam kategori "{activeCategory}". Coba pilih kategori lain.
          </p>
          <div class="mt-6">
            <a
              href="/services"
              class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            >
              Lihat Semua Layanan
            </a>
          </div>
        </div>
      )}
    </div>
  </section>
</MainLayout>