---
import { getCollection } from "astro:content";
import MainLayout from "../../layouts/MainLayout.astro";
import type { GetStaticPathsOptions } from "astro";
import StayCard from "../../components/StayCard.astro";
import SCountryDropdown from "../../components/SCountryDropdown.astro";

// Helper function to parse dates in dd/mm/yyyy format
function parseDate(dateStr: string): Date {
  const [day, month, year] = dateStr.split('/');
  return new Date(`${year}-${month}-${day}`);
}

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const entries = await getCollection("stays");

  // Sort projects by sPublished date (descending order)
  const sortedEntries = entries.sort((a, b) => {
    const dateA = a.data.properties.sPublished?.start 
      ? (typeof a.data.properties.sPublished.start === 'string' 
          ? parseDate(a.data.properties.sPublished.start) 
          : a.data.properties.sPublished.start) 
      : new Date(0);
    const dateB = b.data.properties.sPublished?.start 
      ? (typeof b.data.properties.sPublished.start === 'string' 
          ? parseDate(b.data.properties.sPublished.start) 
          : b.data.properties.sPublished.start) 
      : new Date(0);
    return dateB.getTime() - dateA.getTime(); // Most recent first
  });

  return paginate(sortedEntries, {
    pageSize: 9, // Number of entries per page
  });
}

const { page } = Astro.props;
---

<MainLayout
  title={`All Stays - Page ${page.currentPage} of ${page.lastPage}`}
>
  <fragment slot="head">
    {page.url.prev && (<link rel="prev" href={page.url.prev} />)}
    {page.url.next && (<link rel="next" href={page.url.next} />)}
    {page.currentPage > 1 && (<meta name="robots" content="noindex,follow" />)}
  </fragment>
  <section class="bg-white dark:bg-gray-900">
    <div class="py-8 px-4 mx-auto max-w-screen-xl sm:py-16 lg:px-6">
      <div class="max-w-screen-md mb-8 lg:mb-16">
        <h1
          class="mb-4 text-4xl tracking-tight font-extrabold text-gray-900 dark:text-white"
        >
          Stays
        </h1>
        <p class="text-gray-500 sm:text-xl dark:text-gray-400">
          Find somewhere amazing to stay which gives back to the community you're visiting.
        </p>
      </div>
      
      <div class="flex flex-col md:flex-row mb-5">
        <!-- Div 1 (Showing stays) -->
        <div id="1" class="w-full md:w-3/4 p-2 order-3 md:order-1">
          <span class="text-sm font-normal text-gray-500 dark:text-gray-400">
            Showing <span class="font-semibold text-gray-900 dark:text-white">
              {page.start + 1}-{page.end + 1}
            </span> of <span class="font-semibold text-gray-900 dark:text-white">
              {page.total}
            </span> stays          </span>
        </div>
      
        <!-- Div 3 (Country Dropdown) -->
        <div id="3" class="w-full md:w-1/4 p-2 order-2 md:order-3">
          <SCountryDropdown />
        </div>
      </div>

      <div
        class="space-y-8 md:grid md:grid-cols-2 lg:grid-cols-3 md:gap-12 md:space-y-0"
      >
        {page.data.map((stay) => <StayCard stay={stay} />)}
      </div>
    </div>
  </section>
  <section class="bg-white dark:bg-gray-900">
    <div class="py-8 px-4 mx-auto max-w-screen-xl sm:py-16 lg:px-6">
      <nav class="flex justify-center items-center space-x-1">
        {page.url.prev && (
          <a
            href={page.url.prev}
            class="flex items-center justify-center px-3 h-8 ml-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
          >
            Previous
          </a>
        )}
        
        {Array.from({ length: page.lastPage }, (_, i) => i + 1).map((pageNum) => (
          <a
            href={pageNum === 1 ? '/stays/' : `/stays/${pageNum}/`}
            class={`flex items-center justify-center px-3 h-8 leading-tight border ${
              pageNum === page.currentPage
                ? 'text-blue-600 bg-blue-50 border-blue-300 hover:bg-blue-100 hover:text-blue-700 dark:border-gray-700 dark:bg-gray-700 dark:text-white'
                : 'text-gray-500 bg-white border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'
            }`}
          >
            {pageNum}
          </a>
        ))}
        
        {page.url.next && (
          <a
            href={page.url.next}
            class="flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
          >
            Next
          </a>
        )}
      </nav>
    </div>
  </section>
</MainLayout>
